<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.group6.library.dao.AccountMapper" >
  <resultMap id="BaseResultMap" type="edu.group6.library.model.Account" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="id_num" property="idNum" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="vip" property="vip" jdbcType="INTEGER" />
    <result column="lend_times" property="lendTimes" jdbcType="INTEGER" />
    <result column="over_times" property="overTimes" jdbcType="INTEGER" />
    <result column="is_use" property="isUse" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, phone, name, id_num, password, vip, lend_times, over_times, is_use
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from accounts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="returnId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from accounts
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  <select id="search" resultMap="BaseResultMap" parameterType="edu.group6.library.model.Account" >
    select
    <include refid="Base_Column_List" />
    from accounts
    where is_use = 1
    <if test="id!=null and id!=''">
      and id = #{id,jdbcType=INTEGER}
    </if>
    <if test="name!=null and name!= ''">
      and name LIKE concat('%',concat(#{name,jdbcType=VARCHAR},'%'))
    </if>
    <if test="vip!=-1">
      and vip = #{vip,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByName" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from accounts
    where name = #{name,jdbcType=VARCHAR}
  </select>
  <select id="selectByPhone" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from accounts
    where phone = #{phone,jdbcType=VARCHAR}
  </select>
  <select id="selectByIdNum" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from accounts
    where id_num = #{idNum,jdbcType=VARCHAR}
  </select>

  <select id="selectLogin" resultMap="BaseResultMap" parameterType="edu.group6.library.model.Account" >
    select
    *
    from accounts
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from accounts
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="edu.group6.library.model.Account" >
    insert into accounts( name, password, id_num, phone )
    values (#{name,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},
    #{idNum,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.group6.library.model.Account" >
    insert into accounts
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="idNum != null" >
        id_num,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="vip != null" >
        vip,
      </if>
      <if test="lendTimes != null" >
        lend_times,
      </if>
      <if test="overTimes != null" >
        over_times,
      </if>
      <if test="isUse != null" >
        is_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idNum != null" >
        #{idNum,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="vip != null" >
        #{vip,jdbcType=INTEGER},
      </if>
      <if test="lendTimes != null" >
        #{lendTimes,jdbcType=INTEGER},
      </if>
      <if test="overTimes != null" >
        #{overTimes,jdbcType=INTEGER},
      </if>
      <if test="isUse != null" >
        #{isUse,jdbcType=TINYINT}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.group6.library.model.Account" >
    update accounts
    <set >
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idNum != null" >
        id_num = #{idNum,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="vip != null" >
        vip = #{vip,jdbcType=INTEGER},
      </if>
      <if test="lendTimes != null" >
        lend_times = #{lendTimes,jdbcType=INTEGER},
      </if>
      <if test="overTimes != null" >
        over_times = #{overTimes,jdbcType=INTEGER},
      </if>
      <if test="isUse != null" >
        is_use = #{isUse,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.group6.library.model.Account" >
    update accounts
    set phone = #{phone,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      id_num = #{idNum,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      vip = #{vip,jdbcType=INTEGER},
      lend_times = #{lendTimes,jdbcType=INTEGER},
      over_times = #{overTimes,jdbcType=INTEGER},
      is_use = #{isUse,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>