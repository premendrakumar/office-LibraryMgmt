<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.group6.library.dao.BookMapper" >
  <resultMap id="BaseResultMap" type="edu.group6.library.model.Book" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="isbn" property="isbn" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="press_id" property="pressId" jdbcType="INTEGER" />
    <result column="press_date" property="pressDate" jdbcType="DATE" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="DECIMAL" />
    <result column="count" property="count" jdbcType="INTEGER" />
    <result column="rest" property="rest" jdbcType="INTEGER" />
    <result column="storage" property="storage" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="auth" property="auth" jdbcType="INTEGER" />
    <result column="is_use" property="isUse" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="edu.group6.library.model.Book" extends="BaseResultMap" >
    <result column="info" property="info" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, isbn, name, author, press_id, press_date, type_id, price, count, rest, storage, 
    state, auth, is_use
  </sql>
  <sql id="Blob_Column_List" >
    info
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from books
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectById" resultMap="BaseResultMap" parameterType="edu.group6.library.model.Book">
    select
      *
    from books
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="search" resultMap="BaseResultMap" parameterType="edu.group6.library.model.Book">
    select
    *
    from books
    where is_use=1
    <if test="isbn!=null and isbn!=''">
      and isbn = #{isbn,jdbcType=VARCHAR}
    </if>
    <if test="name!=null and name!=''">
      and name like concat('%',concat(#{name,jdbcType=VARCHAR},'%'))
    </if>
    <if test="auth != -1">
      and auth = #{auth,jdbcType=INTEGER}
    </if>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from books
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="edu.group6.library.model.Book" >
    insert into books (id, isbn, name, 
      author, press_id, press_date, 
      type_id, price, count, 
      rest, storage,
      auth, info
      )
    values (#{id,jdbcType=BIGINT}, #{isbn,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{author,jdbcType=VARCHAR}, #{pressId,jdbcType=INTEGER}, now(),
      #{typeId,jdbcType=INTEGER}, #{price,jdbcType=DECIMAL}, #{count,jdbcType=INTEGER}, 
      #{count,jdbcType=INTEGER}, #{storage,jdbcType=VARCHAR},
      #{auth,jdbcType=INTEGER},#{info,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.group6.library.model.Book" >
    insert into books
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="isbn != null" >
        isbn,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="pressId != null" >
        press_id,
      </if>
      <if test="pressDate != null" >
        press_date,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="rest != null" >
        rest,
      </if>
      <if test="storage != null" >
        storage,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="auth != null" >
        auth,
      </if>
      <if test="isUse != null" >
        is_use,
      </if>
      <if test="info != null" >
        info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="isbn != null" >
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="pressId != null" >
        #{pressId,jdbcType=INTEGER},
      </if>
      <if test="pressDate != null" >
        #{pressDate,jdbcType=DATE},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="count != null" >
        #{count,jdbcType=INTEGER},
      </if>
      <if test="rest != null" >
        #{rest,jdbcType=INTEGER},
      </if>
      <if test="storage != null" >
        #{storage,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="auth != null" >
        #{auth,jdbcType=INTEGER},
      </if>
      <if test="isUse != null" >
        #{isUse,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        #{info,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.group6.library.model.Book" >
    update books
    <set >
      <if test="isbn != null" >
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="pressId != null" >
        press_id = #{pressId,jdbcType=INTEGER},
      </if>
      <if test="pressDate != null" >
        press_date = #{pressDate,jdbcType=DATE},
      </if>
      <if test="typeId != null" >
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="rest != null" >
        rest = #{rest,jdbcType=INTEGER},
      </if>
      <if test="storage != null" >
        storage = #{storage,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="auth != null" >
        auth = #{auth,jdbcType=INTEGER},
      </if>
      <if test="isUse != null" >
        is_use = #{isUse,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="edu.group6.library.model.Book" >
    update books
    set isbn = #{isbn,jdbcType=VARCHAR},
    name = #{name,jdbcType=VARCHAR},
    author = #{author,jdbcType=VARCHAR},
    press_id = #{pressId,jdbcType=INTEGER},
    press_date = #{pressDate,jdbcType=DATE},
    type_id = #{typeId,jdbcType=INTEGER},
    price = #{price,jdbcType=DECIMAL},
    count = #{count,jdbcType=INTEGER},
    rest = #{rest,jdbcType=INTEGER},
    storage = #{storage,jdbcType=VARCHAR},
    state = #{state,jdbcType=INTEGER},
    auth = #{auth,jdbcType=INTEGER},
    is_use = #{isUse,jdbcType=INTEGER},
    info = #{info,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="lend" parameterType="java.lang.Long" >
    update books
    set
    rest = rest-1
    where id = #{bookId,jdbcType=BIGINT}
    and rest>0
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.group6.library.model.Book" >
    update books
    set isbn = #{isbn,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      press_id = #{pressId,jdbcType=INTEGER},
      press_date = #{pressDate,jdbcType=DATE},
      type_id = #{typeId,jdbcType=INTEGER},
      price = #{price,jdbcType=DECIMAL},
      count = #{count,jdbcType=INTEGER},
      rest = #{rest,jdbcType=INTEGER},
      storage = #{storage,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      auth = #{auth,jdbcType=INTEGER},
      is_use = #{isUse,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>