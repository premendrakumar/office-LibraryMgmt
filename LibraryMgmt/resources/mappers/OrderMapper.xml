<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.group6.library.dao.OrderMapper" >
  <resultMap id="BaseResultMap" type="edu.group6.library.model.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="book_id" property="bookId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="lend_time" property="lendTime" jdbcType="TIMESTAMP" />
    <result column="rtrn_time" property="rtrnTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="is_use" property="isUse" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, book_id, user_id, lend_time, rtrn_time, state, is_use
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from orders
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="returnBook" parameterType="edu.group6.library.model.returnBook">
    UPDATE books,orders set books.rest=books.rest+1, orders.state=2,orders.rtrn_time=now()
    WHERE books.id=orders.book_id and books.isbn=#{isbn} and orders.user_id=#{userId} and orders.state=1
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from orders
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from orders
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="edu.group6.library.model.Order" >
    insert into orders (book_id, user_id,
      lend_time, state
      )
    values ( #{bookId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT},
      now(), #{state,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="edu.group6.library.model.Order" >
    insert into orders
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="bookId != null" >
        book_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="lendTime != null" >
        lend_time,
      </if>
      <if test="rtrnTime != null" >
        rtrn_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="isUse != null" >
        is_use,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="bookId != null" >
        #{bookId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="lendTime != null" >
        #{lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rtrnTime != null" >
        #{rtrnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="isUse != null" >
        #{isUse,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="edu.group6.library.model.Order" >
    update orders
    <set >
      <if test="bookId != null" >
        book_id = #{bookId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="lendTime != null" >
        lend_time = #{lendTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rtrnTime != null" >
        rtrn_time = #{rtrnTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="isUse != null" >
        is_use = #{isUse,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.group6.library.model.Order" >
    update orders
    set book_id = #{bookId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      lend_time = #{lendTime,jdbcType=TIMESTAMP},
      rtrn_time = #{rtrnTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      is_use = #{isUse,jdbcType=TINYINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>